#include <iostream>
#include <locale.h>
using namespace std;

int main() {

    setlocale(LC_ALL, "Russian");
    // объявляем количество строк и столбцов нашего представления бит
    int row = 8, col = 8;
    int bin = 6;
    // объявляем беззнаковый long long (64 бита = весь диапазон)
    unsigned long long a = 278465468616486182;

    cout << "Привет, давай расскажу тебе правила этой игры: " << endl;
    cout << "Внутри кода есть число. Разбито на биты оно. 1 - решка, 0 - орёл." << endl;
    cout << "Выбирают один бит. А я должен подсказать, какой бит нам поменять." << endl << endl;

    // выводим поле row X col
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
            cout << ((a >> i * col + j) & 1) << " ";
        cout << endl;
    }
    // Предлагаем выбрать бит
    int b;
    cout << "Какой бит выбираем: ";
    cin >> b;
    // Если бит находится за диапазоном ULL
    if (b > row * col - 1 || b > 63)
    {
        cout << "Ты выбрал бит за диапазоном. Так нельзя.";
        return -1;
    }
    // Выписали индекс бита и его двоичное представление
    cout << "Был выбран бит: ";
    for (int i = 0; i < bin; i++)
        cout << ((b >> i) & 1);
    cout << " или " << b;
    cout << endl;
    // ищем число доски
    int c = 0;
    for (int n = bin - 1; n >= 0; n--)
    {
        int d = 0;
        // не знаю, нужна ли здесь регистровая переменная, но поставил. 
        for (register int i = 0; i < row * col; i++)
            if ((i >> n) & 1 && (a >> i) & 1)
                d++;
        c |= (d % 2);
        c <<= 1;
    }
    // ищем наш бит
    int bit = 0;
    for (int i = 0; i < bin; i++)
    {
        bit <<= 1;
        bit |= ((c >> i) & 1) ^ ((b >> i) & 1);
    }
    // если бит равен цислу доски, выходим из программы
    if (bit == c)
    {
        cout << "Ничего не меняем";
        return -1;
    }
    // иначе пишем, какой бит меняем
    cout << "Поменяй бит: ";

    for (int i = 0; i < bin; i++)
    {
        cout << ((bit >> i) & 1);
    }

    cout << " или " << bit;
    return 0;
}